---
import reactUuid from "react-uuid";
import { IconHome } from "@tabler/icons";

import Base from "../components/Base.astro";
import { BlogCard } from "../components/BlogCard";
import { isPostRecent } from "../utils/isPostRecent";

let posts: Record<string, any> = [];

try {
  posts = (await Astro.glob("./blog/*.{md, mdx}"))
    .filter((post) => !post.frontmatter.draft)
    .sort(
      (a, b) =>
        new Date(b.frontmatter.pubDate).valueOf() -
        new Date(a.frontmatter.pubDate).valueOf()
    );
} catch (err) {
  posts = [];
}
---

<Base>
  <div class="xl:max-w-screen-xl lg:mx-auto">
    <div class="flex justify-center lg:justify-start">
      <a
        href="/"
        role="button"
        class="inline-flex items-center gap-x-2 dark:bg-gray-700 px-3 py-2 rounded-md dark:text-gray-200 dark:hover:text-gray-50 text-gray-100 bg-gray-600 hover:text-gray-400"
      >
        <span class="mb-0.5">
          <IconHome />
        </span>
        <span class="font-medium text-sm">In√≠cio</span>
      </a>
    </div>

    <div
      class="flex flex-col justify-center items-center gap-8 py-10 md:flex-row md:flex-wrap md:gap-8 md:justify-around lg:justify-between"
    >
      {
        posts.length == 0 && (
          <div class="dark:text-white w-full text-center text-xl font-medium">
            My bad. Postei nada ainda :/
          </div>
        )
      }

      <>
        {
          posts.length > 0 &&
            posts.map((post) => (
              <BlogCard
                key={reactUuid()}
                href={post.url}
                title={post.frontmatter.title}
                description={post.frontmatter.description}
                createdAt={post.frontmatter.pubDate}
                tags={post.frontmatter.tags}
                isNew={isPostRecent(post.frontmatter.pubDate)}
                client:load
              />
            ))
        }
      </>
    </div>
  </div>
</Base>
